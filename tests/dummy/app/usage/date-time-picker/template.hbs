{{page-title 'Date Time Picker'}}

<h1>date-time-picker</h1>

<p>
  This component adds a date/time picker combo. It is basically a wrapper for date-picker & time-picker in combination.
</p>

<h2>Basic Usage</h2>
{{date-time-picker value=date1.value action=(action 'updateDate1')}}
{{#code-block language='handlebars'}}\{{date-time-picker action=(action 'updateDateTime')}}{{/code-block}}

<div class="wrapper">
  <h2>With start value</h2>
  {{date-time-picker value=date2.value action=(action 'updateDateTime')}}
</div>

<div class="wrapper">
  <h2>Disabled</h2>
  {{date-time-picker value=date2.value disabled=true action=(action 'updateDateTime')}}
</div>

<h2>Attributes</h2>

<table class="table table-bordered table-hover table-striped">
  <thead>
    <tr>
      <th>Attribute</th>
      <th>Description</th>
      <th>Default</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>
        value
      </td>
      <td>
        The default value for the date picker.
        This can be null or a moment.js-Date.
      </td>
      <td>
        {{#code-inline language='javascript'}}null{{/code-inline}}
      </td>
    </tr>
    <tr>
      <td>
        action
      </td>
      <td>
        The action to call whenever the date or time changes.
        Has to be an actual action method, not an action name, e.g.
        {{#code-inline language='handlebars'}}action=(action 'myAction'){{/code-inline}}.
        The action will receive the selected (moment.js) date as parameter.
      </td>
      <td>
        {{#code-inline language='javascript'}}null{{/code-inline}}
      </td>
    </tr>
    <tr>
      <td>
        ignoreZeroTime
      </td>
      <td>
        If this is true, if the time is 00:00 it will not be displayed in the time picker.
        This has the benefit that if you select a date first,
        the time will not be auto-prefilled with 00:00 but stay empty.
        Note that this only affects the display of the time.
      </td>
      <td>
        {{#code-inline language='javascript'}}true{{/code-inline}}
      </td>
    </tr>
    <tr>
      <td>
        minDate
      </td>
      <td>
        The minimum selectable date. No date before this date will be selectable.
      </td>
      <td>
        {{#code-inline language='javascript'}}null{{/code-inline}}
      </td>
    </tr>
    <tr>
      <td>
        maxDate
      </td>
      <td>
        The maximum selectable date. No date after this date will be selectable.
      </td>
      <td>
        {{#code-inline language='javascript'}}null{{/code-inline}}
      </td>
    </tr>
    <tr>
      <td>
        minTime
      </td>
      <td>
        The minimum selectable time. No time before this time will be selectable.
        This can be either a moment.js date, or a parseable string.
      </td>
      <td>
        {{#code-inline language='javascript'}}null{{/code-inline}}
      </td>
    </tr>
    <tr>
      <td>
        maxTime
      </td>
      <td>
        The maximum selectable time. No time after this time will be selectable.
        This can be either a moment.js date, or a parseable string.
      </td>
      <td>
        {{#code-inline language='javascript'}}null{{/code-inline}}
      </td>
    </tr>
    <tr>
      <td>
        step
      </td>
      <td>
        The step in which the times can be set, in minutes.
        Times entered will be rounded to the nearest fitting step.
      </td>
      <td>
        {{#code-inline language='javascript' class="no-wrap"}}1{{/code-inline}}
      </td>
    </tr>
    <tr>
      <td>
        selectStep
      </td>
      <td>
        The steps that are available in the dropdown.
      </td>
      <td>
        {{#code-inline language='javascript' class="no-wrap"}}30{{/code-inline}}
      </td>
    </tr>
    <tr>
      <td>
        datePickerClasses
      </td>
      <td>
        Classes to add to the date picker button.
      </td>
      <td>
        {{#code-inline language='javascript' class="no-wrap"}}''{{/code-inline}}
      </td>
    </tr>
    <tr>
      <td>
        timePickerClasses
      </td>
      <td>
        Classes to add to the time picker input.
      </td>
      <td>
        {{#code-inline language='javascript' class="no-wrap"}}''{{/code-inline}}
      </td>
    </tr>
    <tr>
      <td>
        buttonDateFormat
      </td>
      <td>
        This is passed through to date-picker.
      </td>
      <td>
        {{#code-inline language='javascript' class="no-wrap"}}'L'{{/code-inline}}
      </td>
    </tr>
    <tr>
      <td>
        amPm
      </td>
      <td>
        If the am/pm time format should be used instead of the 24h format.
        By default, this is computed from the moment.js locale.
        You can overwrite this if necessary.
      </td>
      <td>
        {{#code-inline language='javascript' class="no-wrap"}}true{{/code-inline}}
      </td>
    </tr>
    <tr>
      <td>
        disabled
      </td>
      <td>
        If this is true, the date/time cannot be changed.
      </td>
      <td>
        {{#code-inline language='javascript'}}false{{/code-inline}}
      </td>
    </tr>
    <tr>
      <td>
        renderInPlace
      </td>
      <td>
        This is passed through to ember-basic-dropdown.
        See <a href="https://www.ember-basic-dropdown.com/docs/api-reference">ember-basic-dropdown docs</a> for details.
      </td>
      <td>
        {{#code-inline language='javascript'}}false{{/code-inline}}
      </td>
    </tr>
    <tr>
      <td>
        horizontalPosition
      </td>
      <td>
        This is passed through to ember-basic-dropdown.
        See <a href="https://www.ember-basic-dropdown.com/docs/api-reference">ember-basic-dropdown docs</a> for details.
      </td>
      <td>
        {{#code-inline language='javascript'}}'auto'{{/code-inline}}
      </td>
    </tr>
    <tr>
      <td>
        verticalPosition
      </td>
      <td>
        This is passed through to ember-basic-dropdown.
        See <a href="https://www.ember-basic-dropdown.com/docs/api-reference">ember-basic-dropdown docs</a> for details.
      </td>
      <td>
        {{#code-inline language='javascript'}}'auto'{{/code-inline}}
      </td>
    </tr>
  </tbody>
</table>