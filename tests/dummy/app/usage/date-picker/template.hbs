{{page-title 'Date Picker'}}

<h1>
  date-picker
</h1>

<p>
  This component adds a configurable date picker which emits an action if the selected date changes.
</p>

<h2>
  Basic Usage
</h2>
<DatePicker @value={{this.date}} @onChange={{this.updateDate}} />
<CodeBlock @language="handlebars">
  &lt;DatePicker @value={{this.date}} @onChange={{this.updateDate}} /&gt;
</CodeBlock>

<div class='wrapper'>
  <h2>
    With start value
  </h2>
  <DatePicker @value={{this.date2.value}} @onChange={{this.updateDate}} />
</div>

<div class='wrapper'>
  <h2>
    With min & max value
  </h2>
  <DatePicker
    @minDate={{this.date3.min}}
    @maxDate={{this.date3.max}}
    @onChange={{this.updateDate}}
  />
</div>

<div class='wrapper'>
  <h2>
    Disabled
  </h2>
  <DatePicker @disabled={{true}} @onChange={{this.updateDate}} />
</div>

<div class='wrapper'>
  <h2>
    Inline Form
  </h2>

  <DatePickerInline @value={{this.date}} @onChange={{this.updateDate}} />

    <CodeBlock @language="handlebars">
&lt;DatePickerInline @value={{this.date}} @onChange={{this.updateDate}} /&gt;
  </CodeBlock>
</div>

<div class='wrapper'>
  <h2>
    Custom Button
  </h2>

  <DatePicker 
    @value={{this.date}} 
    @onChange={{this.updateDate}} 
    as |selectedDates|>
    <button type='button'>
      Select me! Current value:
      {{#if selectedDates.firstObject}}
        {{moment-format selectedDates.firstObject 'L'}}
      {{else}}
        None
      {{/if}}
    </button>
  </DatePicker>

  <CodeBlock @language="handlebars">
&lt;DatePicker 
  @value={{this.date}} 
  @onChange={{this.updateDate}} 
  as |selectedDates|&gt;&lt;/DatePicker&gt;
  </CodeBlock>

  <p>
    Note that this will always receive an array as yielded content.
    For a regular date picker, this array will have exactly one value (which can be null or a moment instance).
    For a date range picker, it will have two values (which can both either be null or a moment instance).
  </p>
</div>

<h2>
  Attributes
</h2>

<table class='table table-bordered table-hover table-striped'>
  <thead>
    <tr>
      <th>
        Attribute
      </th>
      <th>
        Description
      </th>
      <th>
        Default
      </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>
        value
      </td>
      <td>
        The default value for the date picker.
        This can be null, a moment.js-Date, or an array containing 0-2 moment.js Dates.
      </td>
      <td>
        <CodeInline @language="javascript">
          null
        </CodeInline>
      </td>
    </tr>
    <tr>
      <td>
        onChange
      </td>
      <td>
        The action to call whenever the date changes.
        The action will receive the selected (moment.js) date as parameter.
        If you set
        <CodeInline @language="javascript">
          range=true
        </CodeInline>
        , the action will receive
        an array with 2 elements as parameter.
      </td>
      <td>
        <CodeInline @language="javascript">
          null
        </CodeInline>
      </td>
    </tr>
    <tr>
      <td>
        onClose
      </td>
      <td>
        While
        <i>
          action
        </i>
        will be sent whenever one of the values changes, this action will be called whenever the
        date-picker is closed. This is especially useful for date range pickers.
        The action will receive the selected (moment.js) date as parameter.
        If you set
        <CodeInline @language="javascript">
          range=true
        </CodeInline>
        , the action will receive
        an array with 2 elements as parameter.
      </td>
      <td>
        <CodeInline @language="javascript">
          null
        </CodeInline>
      </td>
    </tr>
    <tr>
      <td>
        minDate
      </td>
      <td>
        The minimum selectable date. No date before this date will be selectable.
      </td>
      <td>
        <CodeInline @language="javascript">
          null
        </CodeInline>
      </td>
    </tr>
    <tr>
      <td>
        maxDate
      </td>
      <td>
        The maximum selectable date. No date after this date will be selectable.
      </td>
      <td>
        <CodeInline @language="javascript">
          null
        </CodeInline>
      </td>
    </tr>
    <tr>
      <td>
        range
      </td>
      <td>
        If set to true, this will be a date-range picker.
        See
        <LinkTo @route="usage.date-range-picker">
          Date Range Picker
        </LinkTo>
        for more details.
      </td>
      <td>
        <CodeInline @language="javascript" @class="no-wrap">
          false
        </CodeInline>
      </td>
    </tr>
    <tr>
      <td>
        placeholder
      </td>
      <td>
        The placeholder for the date picker. Defaults to 'Select Date...'.
      </td>
      <td>
        <CodeInline @language="javascript" @class="no-wrap">
          'Select Date...'
        </CodeInline>
      </td>
    </tr>
    <tr>
      <td>
        buttonClasses
      </td>
      <td>
        Classes to add to the date picker button.
      </td>
      <td>
        <CodeInline @language="javascript" @class="no-wrap">
          ''
        </CodeInline>
      </td>
    </tr>
    <tr>
      <td>
        buttonDateFormat
      </td>
      <td>
        A moment.js-format which is used for the values on the button.
      </td>
      <td>
        <CodeInline @language="javascript" @class="no-wrap">
          'L'
        </CodeInline>
      </td>
    </tr>
    <tr>
      <td>
        disabled
      </td>
      <td>
        If this is true, the date cannot be changed.
      </td>
      <td>
        <CodeInline @language="javascript">
          false
        </CodeInline>
      </td>
    </tr>
    <tr>
      <td>
        disabledDates
      </td>
      <td>
        An array of (moment.js) dates that should not be selectable.
      </td>
      <td>
        <CodeInline @language="javascript">
          []
        </CodeInline>
      </td>
    </tr>
    <tr>
      <td>
        disableMonthPicker
      </td>
      <td>
        If this is true, the month picker (when clicking on the month name in the date picker) will be disabled.
      </td>
      <td>
        <CodeInline @language="javascript">
          false
        </CodeInline>
      </td>
    </tr>
    <tr>
      <td>
        disableYearPicker
      </td>
      <td>
        If this is true, the year picker (when clicking on the year in the date picker) will be disabled.
      </td>
      <td>
        <CodeInline @language="javascript">
          false
        </CodeInline>
      </td>
    </tr>
    <tr>
      <td>
        availableYearOffset
      </td>
      <td>
        The number of years to show in the year picker before & after the current year.
      </td>
      <td>
        <CodeInline @language="javascript">
          10
        </CodeInline>
      </td>
    </tr>
    <tr>
      <td>
        startWeekOnSunday
      </td>
      <td>
        If set to true, the calendar will be displayed with the week starting on Sunday.
      </td>
      <td>
        <CodeInline @language="javascript">
          false
        </CodeInline>
      </td>
    </tr>
    <tr>
      <td>
        renderInPlace
      </td>
      <td>
        This is passed through to ember-basic-dropdown.
        See
        <a href='https://www.ember-basic-dropdown.com/docs/api-reference'>
          ember-basic-dropdown docs
        </a>
        for details.
      </td>
      <td>
        <CodeInline @language="javascript">
          false
        </CodeInline>
      </td>
    </tr>
    <tr>
      <td>
        horizontalPosition
      </td>
      <td>
        This is passed through to ember-basic-dropdown.
        See
        <a href='https://www.ember-basic-dropdown.com/docs/api-reference'>
          ember-basic-dropdown docs
        </a>
        for details.
      </td>
      <td>
        <CodeInline @language="javascript">
          'auto'
        </CodeInline>
      </td>
    </tr>
    <tr>
      <td>
        verticalPosition
      </td>
      <td>
        This is passed through to ember-basic-dropdown.
        See
        <a href='https://www.ember-basic-dropdown.com/docs/api-reference'>
          ember-basic-dropdown docs
        </a>
        for details.
      </td>
      <td>
        <CodeInline @language="javascript">
          'auto'
        </CodeInline>
      </td>
    </tr>
  </tbody>
</table>